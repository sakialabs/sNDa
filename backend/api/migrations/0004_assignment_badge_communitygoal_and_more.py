# Generated by Django 4.2.16 on 2025-08-25 00:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending Acceptance"),
                            ("ACCEPTED", "Accepted"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("DECLINED", "Declined"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=20,
                        verbose_name="Assignment Status",
                    ),
                ),
                (
                    "assignment_note",
                    models.TextField(
                        blank=True, verbose_name="Assignment Instructions"
                    ),
                ),
                (
                    "volunteer_response",
                    models.TextField(blank=True, verbose_name="Volunteer Response"),
                ),
                (
                    "estimated_hours",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Estimated Hours"
                    ),
                ),
                (
                    "actual_hours",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Actual Hours"
                    ),
                ),
                (
                    "scheduled_start",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Scheduled Start"
                    ),
                ),
                (
                    "scheduled_end",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Scheduled End"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("accepted_at", models.DateTimeField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Badge Name")),
                ("description", models.TextField(verbose_name="Description")),
                ("icon", models.CharField(max_length=50, verbose_name="Icon")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("MILESTONE", "Milestone"),
                            ("STREAK", "Streak"),
                            ("COMMUNITY", "Community"),
                            ("SPECIAL", "Special Achievement"),
                        ],
                        max_length=20,
                        verbose_name="Category",
                    ),
                ),
                (
                    "points_value",
                    models.IntegerField(default=10, verbose_name="Points Value"),
                ),
                (
                    "required_cases",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Required Cases"
                    ),
                ),
                (
                    "required_streak",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Required Streak"
                    ),
                ),
                (
                    "required_stories",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Required Stories"
                    ),
                ),
                (
                    "color",
                    models.CharField(
                        default="blue", max_length=20, verbose_name="Badge Color"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["category", "required_cases"],
            },
        ),
        migrations.CreateModel(
            name="CommunityGoal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Goal Title")),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "goal_type",
                    models.CharField(
                        choices=[
                            ("CASES", "Cases Resolved"),
                            ("STORIES", "Stories Shared"),
                            ("VOLUNTEERS", "Active Volunteers"),
                            ("DONATIONS", "Donations Raised"),
                        ],
                        max_length=20,
                        verbose_name="Goal Type",
                    ),
                ),
                ("target_value", models.IntegerField(verbose_name="Target Value")),
                (
                    "current_value",
                    models.IntegerField(default=0, verbose_name="Current Value"),
                ),
                ("start_date", models.DateField(verbose_name="Start Date")),
                ("end_date", models.DateField(verbose_name="End Date")),
                (
                    "icon",
                    models.CharField(default="ðŸŽ¯", max_length=50, verbose_name="Icon"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="Featured"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-is_featured", "-created_at"],
            },
        ),
        migrations.AlterModelOptions(
            name="volunteerprofile",
            options={"verbose_name": "Volunteer", "verbose_name_plural": "Volunteers"},
        ),
        migrations.AddField(
            model_name="case",
            name="is_public",
            field=models.BooleanField(default=False, verbose_name="Public Story"),
        ),
        migrations.AddField(
            model_name="case",
            name="success_story",
            field=models.TextField(blank=True, null=True, verbose_name="Success Story"),
        ),
        migrations.AddField(
            model_name="volunteerprofile",
            name="cases_completed",
            field=models.IntegerField(default=0, verbose_name="Cases Completed"),
        ),
        migrations.AddField(
            model_name="volunteerprofile",
            name="current_streak",
            field=models.IntegerField(default=0, verbose_name="Current Streak"),
        ),
        migrations.AddField(
            model_name="volunteerprofile",
            name="last_activity",
            field=models.DateTimeField(
                blank=True, null=True, verbose_name="Last Activity"
            ),
        ),
        migrations.AddField(
            model_name="volunteerprofile",
            name="longest_streak",
            field=models.IntegerField(default=0, verbose_name="Longest Streak"),
        ),
        migrations.AddField(
            model_name="volunteerprofile",
            name="total_points",
            field=models.IntegerField(default=0, verbose_name="Total Points"),
        ),
        migrations.CreateModel(
            name="VolunteerStory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Story Title")),
                ("content", models.TextField(verbose_name="Story Content")),
                (
                    "story_type",
                    models.CharField(
                        choices=[
                            ("EXPERIENCE", "Experience Share"),
                            ("CASE_UPDATE", "Case Update"),
                            ("REFLECTION", "Personal Reflection"),
                            ("MILESTONE", "Milestone Achievement"),
                        ],
                        default="EXPERIENCE",
                        max_length=20,
                        verbose_name="Story Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("PUBLISHED", "Published"),
                            ("ARCHIVED", "Archived"),
                        ],
                        default="DRAFT",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "tags",
                    models.JSONField(blank=True, default=list, verbose_name="Tags"),
                ),
                ("likes_count", models.PositiveIntegerField(default=0)),
                ("comments_count", models.PositiveIntegerField(default=0)),
                ("shares_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="volunteer_stories",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_assignment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="volunteer_stories",
                        to="api.assignment",
                    ),
                ),
                (
                    "related_case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="volunteer_stories",
                        to="api.case",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.badge"
                    ),
                ),
                (
                    "earned_for_case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.case",
                    ),
                ),
                (
                    "earned_for_story",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api.volunteerstory",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-earned_at"],
            },
        ),
        migrations.CreateModel(
            name="StoryMedia",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "media_type",
                    models.CharField(
                        choices=[
                            ("IMAGE", "Image"),
                            ("VIDEO", "Video"),
                            ("LINK", "External Link"),
                            ("DOCUMENT", "Document"),
                        ],
                        max_length=20,
                        verbose_name="Media Type",
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="story_media/%Y/%m/%d/",
                        verbose_name="File",
                    ),
                ),
                ("url", models.URLField(blank=True, null=True, verbose_name="URL")),
                (
                    "title",
                    models.CharField(blank=True, max_length=255, verbose_name="Title"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "thumbnail",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="story_thumbnails/%Y/%m/%d/",
                        verbose_name="Thumbnail",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "story",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="media",
                        to="api.volunteerstory",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StoryLike",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "story",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="likes",
                        to="api.volunteerstory",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StoryComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="Comment")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "story",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="api.volunteerstory",
                    ),
                ),
            ],
            options={
                "ordering": ["created_at"],
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("ASSIGNMENT_NEW", "New Assignment"),
                            ("ASSIGNMENT_ACCEPTED", "Assignment Accepted"),
                            ("ASSIGNMENT_COMPLETED", "Assignment Completed"),
                            ("STORY_PUBLISHED", "Story Published"),
                            ("STORY_LIKED", "Story Liked"),
                            ("STORY_COMMENTED", "Story Commented"),
                            ("CASE_UPDATE", "Case Update"),
                            ("SYSTEM", "System Notification"),
                        ],
                        max_length=30,
                        verbose_name="Type",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("message", models.TextField(verbose_name="Message")),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "related_assignment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.assignment",
                    ),
                ),
                (
                    "related_case",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.case",
                    ),
                ),
                (
                    "related_story",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.volunteerstory",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailSchedule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_type", models.CharField(max_length=50)),
                ("scheduled_for", models.DateTimeField()),
                ("sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("failed", models.BooleanField(default=False)),
                ("error_message", models.TextField(blank=True)),
                ("is_volunteer", models.BooleanField(default=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["scheduled_for"],
            },
        ),
        migrations.CreateModel(
            name="EmailAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_type", models.CharField(max_length=50)),
                ("recipient_email", models.EmailField(max_length=254)),
                ("subject", models.CharField(max_length=255)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                (
                    "delivery_status",
                    models.CharField(
                        choices=[
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("bounced", "Bounced"),
                            ("failed", "Failed"),
                        ],
                        default="sent",
                        max_length=20,
                    ),
                ),
                ("opened_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                ("unsubscribed_at", models.DateTimeField(blank=True, null=True)),
                ("open_count", models.PositiveIntegerField(default=0)),
                ("click_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "email_schedule",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.emailschedule",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="assignment",
            name="case",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="assignments",
                to="api.case",
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="coordinator",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="coordinator_assignments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="assignment",
            name="volunteer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="volunteer_assignments",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("case_completed", "Case Completed"),
                            ("story_published", "Story Published"),
                            ("badge_earned", "Badge Earned"),
                            ("streak_milestone", "Streak Milestone"),
                            ("login", "User Login"),
                            ("profile_updated", "Profile Updated"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField()),
                ("points_earned", models.IntegerField(default=0)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="volunteerstory",
            index=models.Index(
                fields=["status", "story_type"], name="api_volunte_status_736301_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="volunteerstory",
            index=models.Index(
                fields=["author", "created_at"], name="api_volunte_author__3b6b98_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userbadge",
            unique_together={("user", "badge")},
        ),
        migrations.AlterUniqueTogether(
            name="storylike",
            unique_together={("story", "user")},
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["recipient", "is_read"], name="api_notific_recipie_28b188_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["notification_type", "created_at"],
                name="api_notific_notific_4e79a9_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emailschedule",
            index=models.Index(
                fields=["scheduled_for", "sent"], name="api_emailsc_schedul_5e9273_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailschedule",
            index=models.Index(
                fields=["email_type"], name="api_emailsc_email_t_f1f6e8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailanalytics",
            index=models.Index(
                fields=["email_type", "delivery_status"],
                name="api_emailan_email_t_b61ccc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emailanalytics",
            index=models.Index(
                fields=["recipient_email"], name="api_emailan_recipie_2dce65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailanalytics",
            index=models.Index(
                fields=["created_at"], name="api_emailan_created_2e11fd_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="assignment",
            unique_together={("case", "volunteer")},
        ),
    ]
