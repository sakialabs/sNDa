version: '3.8'

services:
  # üóÑÔ∏è PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: snda_dev
      POSTGRES_USER: snda_user
      POSTGRES_PASSWORD: snda_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U snda_user -d snda_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üî¥ Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # üêç Django Backend
  backend:
    build:
      context: ../../backend
      dockerfile: ../infra/docker/Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://snda_user:snda_password@db:5432/snda_dev
      - REDIS_URL=redis://redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
    volumes:
      - ../../backend:/app
      - media_files:/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000"

  # ‚öõÔ∏è Next.js Frontend
  frontend:
    build:
      context: ../../frontend
      dockerfile: ../infra/docker/Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_FRONTEND_URL=http://localhost:3000
    volumes:
      - ../../frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    command: npm run dev

  # üîÑ Celery Worker
  celery:
    build:
      context: ../../backend
      dockerfile: ../infra/docker/Dockerfile.backend
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://snda_user:snda_password@db:5432/snda_dev
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../../backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A config worker -l info

  # üìÖ Celery Beat Scheduler
  celery-beat:
    build:
      context: ../../backend
      dockerfile: ../infra/docker/Dockerfile.backend
    environment:
      - DEBUG=True
      - DATABASE_URL=postgresql://snda_user:snda_password@db:5432/snda_dev
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ../../backend:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A config beat -l info

volumes:
  postgres_data:
  redis_data:
  media_files:

networks:
  default:
    name: snda_network